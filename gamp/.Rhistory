geom_segment(aes(x = 0, y = 0, xend = .2, yend = .2 * igf1_info$slope), linetype = "dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, size = 14), axis.title = element_text(size = 8)) +
xlab("Difference in Environment Specific Effects (nmol/L)") +
ylab("Standard Error (nmol/L)") +
xlim(0, .2) +
ylim(0, 4)
igf1_fig <- ggarrange(
g_igf1 + rremove("xlab") + rremove("ylab"),
g_igf1_top_hits + rremove("xlab") + rremove("ylab"),
nrow = 2,
ncol = 1,
labels = NULL
)
igf1_fig <- annotate_figure(
igf1_fig,
left = textGrob("Standard Error (nmol/L)", rot = 90, vjust = 1, gp = gpar(cex = 1, fontsize = 8)),
bottom = textGrob("Difference in Context Specific Effects (nmol/L)", gp = gpar(cex = 1, fontsize = 8), hjust = .5))
traits_fig <- ggarrange(
igf1_fig, #+ rremove("ylab") + rremove("xlab"),
g_all_trait_dist + rremove("ylab"),
g_p_val_trait_dist + rremove("ylab"),
labels = c("", "C", "D"),
nrow = 1,
ncol = 3,
widths = c(1, 1 + (2/3), 1 + (2/3))
)
traits_fig
igf1_info <- make_dec_rule_male_df(
data_dir = "/Users/ericweine/Documents/gwas_amplification/paper_figures/gxsex_cv_results",
trait = "IGF1",
n = 148128,
m = 171544,
n_samp = 15000,
n_ld_samp = 10
)
g_igf1 <- ggplot(data = igf1_info$cv_df, aes(x = fx_diff, y = se_m)) +
geom_point(alpha = .15, color = "orange", size = 1) +
geom_segment(aes(x = 0, y = 0, xend = .2, yend = .2 * igf1_info$slope), linetype = "dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, size = 14), axis.title = element_text(size = 8)) +
xlab("Difference in Environment Specific Effects (nmol/L)") +
ylab("Standard Error (nmol/L)") +
xlim(0, .2) +
ylim(0, 2.5)
igf1_fig <- ggarrange(
g_igf1 + rremove("xlab") + rremove("ylab"),
g_igf1_top_hits + rremove("xlab") + rremove("ylab"),
nrow = 2,
ncol = 1,
labels = NULL
)
igf1_fig <- annotate_figure(
igf1_fig,
left = textGrob("Standard Error (nmol/L)", rot = 90, vjust = 1, gp = gpar(cex = 1, fontsize = 8)),
bottom = textGrob("Difference in Context Specific Effects (nmol/L)", gp = gpar(cex = 1, fontsize = 8), hjust = .5))
traits_fig <- ggarrange(
igf1_fig, #+ rremove("ylab") + rremove("xlab"),
g_all_trait_dist + rremove("ylab"),
g_p_val_trait_dist + rremove("ylab"),
labels = c("", "C", "D"),
nrow = 1,
ncol = 3,
widths = c(1, 1 + (2/3), 1 + (2/3))
)
#annotate_figure(
#  igf1_fig,
#  left = textGrob("Standard Error (nmol/L)", rot = 90, vjust = 1, gp = gpar(cex = 1, fontsize = 14)),
#  bottom = textGrob("Difference in Context Specific Effects (nmol/L)", gp = gpar(cex = 1, fontsize = 14), hjust = .575))
#dev.off()
traits_fig
g_igf1 <- ggplot(data = igf1_info$cv_df, aes(x = fx_diff, y = se_m)) +
geom_point(alpha = .15, color = "orange", size = 1) +
geom_segment(aes(x = 0, y = 0, xend = .2, yend = .2 * igf1_info$slope), linetype = "dashed") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(hjust = 0.5, size = 14), axis.title = element_text(size = 8)) +
xlab("Difference in Environment Specific Effects (nmol/L)") +
ylab("Standard Error (nmol/L)") +
xlim(0, .2) +
ylim(0, 2.5) +
ggtitle("IGF1")
perc_better_vec <- 100 *c(
albumin_info$pct_under_line,
arm_fatfree_mass_L_info$pct_under_line,
arm_fatfree_mass_R_info$pct_under_line,
bmi_info$pct_under_line,
calcium_info$pct_under_line,
creatinine_info$pct_under_line,
diastolicBP_info$pct_under_line,
eosinophil_info$pct_under_line,
fvc_info$pct_under_line,
hba1c_info$pct_under_line,
height_info$pct_under_line,
hip_circ_info$pct_under_line,
igf1_info$pct_under_line,
lymphocyte_perc_info$pct_under_line,
protein_total_info$pct_under_line,
pulse_rate_info$pct_under_line,
rbc_info$pct_under_line,
shbg_info$pct_under_line,
systolicBP_info$pct_under_line,
testosterone_info$pct_under_line,
urate_info$pct_under_line,
urea_info$pct_under_line,
waist_circ_info$pct_under_line,
weight_info$pct_under_line,
whole_body_fat_mass_info$pct_under_line,
wth_info$pct_under_line,
wth_bmi_adj_info$pct_under_line
)
names(perc_better_vec) <- c(
"albumin",
"arm fatfree mass left",
"arm fatfree mass right",
"BMI",
"calcium",
"creatinine",
"diastolic blood pressure",
"eosinophil percentage",
"forced vital capacity",
"HbA1c",
"height",
"hip circumference",
"IGF1",
"lymphocyte percentage",
"protein total",
"pule rate",
"red blood count",
"SHBG",
"systolic blood pressure",
"testosterone",
"urate",
"urea",
"waist circumference",
"weight",
"whole body fat mass",
"waist to hip",
"waist to hip BMI adjusted"
)
perc_better_vec <- sort(perc_better_vec)
perc_better_vec_top_hits <- 100 *c(
albumin_info_top_hits$pct_under_line,
arm_fatfree_mass_L_info_top_hits$pct_under_line,
arm_fatfree_mass_R_info_top_hits$pct_under_line,
bmi_info_top_hits$pct_under_line,
calcium_info_top_hits$pct_under_line,
creatinine_info_top_hits$pct_under_line,
diastolicBP_info_top_hits$pct_under_line,
eosinophil_info_top_hits$pct_under_line,
fvc_info_top_hits$pct_under_line,
hba1c_info_top_hits$pct_under_line,
height_info_top_hits$pct_under_line,
hip_circ_info_top_hits$pct_under_line,
igf1_info_top_hits$pct_under_line,
lymphocyte_perc_info_top_hits$pct_under_line,
protein_total_info_top_hits$pct_under_line,
pulse_rate_info_top_hits$pct_under_line,
rbc_info_top_hits$pct_under_line,
shbg_info_top_hits$pct_under_line,
systolicBP_info_top_hits$pct_under_line,
testosterone_info_top_hits$pct_under_line,
urate_info_top_hits$pct_under_line,
urea_info_top_hits$pct_under_line,
waist_circ_info_top_hits$pct_under_line,
weight_info_top_hits$pct_under_line,
whole_body_fat_mass_info_top_hits$pct_under_line,
wth_info_top_hits$pct_under_line,
wth_bmi_adj_info_top_hits$pct_under_line
)
names(perc_better_vec_top_hits) <- c(
"albumin",
"arm fatfree mass left",
"arm fatfree mass right",
"BMI",
"calcium",
"creatinine",
"diastolic blood pressure",
"eosinophil percentage",
"forced vital capacity",
"HbA1c",
"height",
"hip circumference",
"IGF1",
"lymphocyte percentage",
"protein total",
"pule rate",
"red blood count",
"SHBG",
"systolic blood pressure",
"testosterone",
"urate",
"urea",
"waist circumference",
"weight",
"whole body fat mass",
"waist to hip",
"waist to hip BMI adjusted"
)
perc_better_vec_top_hits <- sort(perc_better_vec_top_hits)
perc_better_df <- data.frame(
y = c(seq(1, length(perc_better_vec)), seq(1, length(perc_better_vec_top_hits))),
perc_better = c(perc_better_vec, perc_better_vec_top_hits),
criterion = c(rep("all", length(perc_better_vec)), rep("p < 5e-8", length(perc_better_vec_top_hits)))
)
library(ggbreak)
g_all_trait_dist <- ggplot(data = perc_better_df %>% dplyr::filter(criterion == "all")) +
geom_point(aes(x = perc_better, y = y)) +
scale_y_continuous(
breaks = seq(1, length(perc_better_vec)),
labels = names(perc_better_vec)
) +
xlab("Percent of Effects Better Estimated with GxE Model") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
library(ggbreak)
g_p_val_trait_dist <- ggplot(data = perc_better_df %>% dplyr::filter(criterion == "p < 5e-8")) +
geom_point(aes(x = perc_better, y = y)) +
scale_y_continuous(
breaks = seq(1, length(perc_better_vec_top_hits)),
labels = names(perc_better_vec_top_hits)
) +
xlab("Percent of Effects Better Estimated with GxE Model") +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
#png(
#  file = "~/Documents/paper_gwas_amplification/images/fig3.png",
#  width = 4000,
#  height = 2000,
#  res = 300
#)
igf1_fig <- ggarrange(
g_igf1 + rremove("xlab") + rremove("ylab"),
g_igf1_top_hits + rremove("xlab") + rremove("ylab"),
nrow = 2,
ncol = 1,
labels = NULL
)
igf1_fig <- annotate_figure(
igf1_fig,
left = textGrob("Standard Error (nmol/L)", rot = 90, vjust = 1, gp = gpar(cex = 1, fontsize = 8)),
bottom = textGrob("Difference in Context Specific Effects (nmol/L)", gp = gpar(cex = 1, fontsize = 8), hjust = .5))
traits_fig <- ggarrange(
igf1_fig, #+ rremove("ylab") + rremove("xlab"),
g_all_trait_dist + rremove("ylab"),
g_p_val_trait_dist + rremove("ylab"),
labels = c("", "C", "D"),
nrow = 1,
ncol = 3,
widths = c(1, 1.5, 1.5)
)
traits_fig
traits_fig <- ggarrange(
igf1_fig, #+ rremove("ylab") + rremove("xlab"),
g_all_trait_dist + rremove("ylab"),
g_p_val_trait_dist + rremove("ylab"),
labels = c("", "C", "D"),
nrow = 1,
ncol = 3,
widths = c(1, 1 + (2/3), 1 + (2/3))
)
traits_fig
g_all_trait_dist <- ggplot(data = perc_better_df %>% dplyr::filter(criterion == "all")) +
geom_point(aes(x = perc_better, y = y)) +
scale_y_continuous(
breaks = seq(1, length(perc_better_vec)),
labels = names(perc_better_vec)
) +
xlab("Percent of Effects Better Estimated with GxE Model") +
theme(
plot.title = element_text(hjust = 0.5, size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
ggtitle("All Variants")
library(ggbreak)
g_p_val_trait_dist <- ggplot(data = perc_better_df %>% dplyr::filter(criterion == "p < 5e-8")) +
geom_point(aes(x = perc_better, y = y)) +
scale_y_continuous(
breaks = seq(1, length(perc_better_vec_top_hits)),
labels = names(perc_better_vec_top_hits)
) +
xlab("Percent of Effects Better Estimated with GxE Model") +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
) +
ggtitle("Top Hits")
#png(
#  file = "~/Documents/paper_gwas_amplification/images/fig3.png",
#  width = 4000,
#  height = 2000,
#  res = 300
#)
igf1_fig <- ggarrange(
g_igf1 + rremove("xlab") + rremove("ylab"),
g_igf1_top_hits + rremove("xlab") + rremove("ylab"),
nrow = 2,
ncol = 1,
labels = NULL
)
igf1_fig <- annotate_figure(
igf1_fig,
left = textGrob("Standard Error (nmol/L)", rot = 90, vjust = 1, gp = gpar(cex = 1, fontsize = 8)),
bottom = textGrob("Difference in Context Specific Effects (nmol/L)", gp = gpar(cex = 1, fontsize = 8), hjust = .5))
traits_fig <- ggarrange(
igf1_fig, #+ rremove("ylab") + rremove("xlab"),
g_all_trait_dist + rremove("ylab"),
g_p_val_trait_dist + rremove("ylab"),
labels = c("", "C", "D"),
nrow = 1,
ncol = 3,
widths = c(1, 1 + (2/3), 1 + (2/3))
)
traits_fig
(1 / 1.5) * gamp:::make_amp_cov_mat(
desired_corr = 1,
amp_coef = 1.5
)
.01 * gamp:::make_amp_cov_mat(
desired_corr = 1, amp_coef = 1.4, amp_e0 = FALSE
)
gamp:::make_amp_cov_mat(
desired_corr = 1, amp_coef = 1.4, amp_e0 = FALSE
)
seq(from = -1, to = 1, by = (1/3))
set.seed(1)
data_dir <- "/Users/ericweine/Downloads/doi_10.5061_dryad.hhmgqnkgr__v7"
library(dplyr)
summary_table <- read.delim(
glue::glue('{data_dir}/SummaryTable_allsites_12Nov20.txt')
)
sites_df <- data.frame(stringr::str_split_fixed(summary_table$site, ":", 2))
colnames(sites_df) <- c("chromosome", "site_id")
sites_df <- sites_df %>%
dplyr::mutate(site_id = as.numeric(site_id))
# split into blocks of a certain length
split_into_LD_blocks <- function(df, block_length) {
block_range <- seq(from = min(df$site_id), to = max(df$site_id), by = block_length)
df %>%
dplyr::mutate(block_id = plyr::laply(site_id, function(x) sum(x > block_range)))
}
# group by chromosome and then split into blocks
sites_df <- sites_df %>%
dplyr::group_by(chromosome) %>%
dplyr::group_modify(~ split_into_LD_blocks(.x, 1e4))
# Now, want to sample one SNP from each group
sites_sample_df <- sites_df %>%
dplyr::ungroup() %>%
dplyr::sample_frac() %>% #randomly shuffle df
dplyr::distinct(chromosome, block_id, .keep_all = TRUE) %>%
dplyr::select(chromosome, site_id)
# Reconstruct site names
selected_sites <- purrr::pmap_chr(
list(sites_sample_df$chromosome, sites_sample_df$site_id),
function(x, y) glue::glue("{x}:{y}")
)
set.seed(1)
data_dir <- "/Users/ericweine/Downloads/doi_10.5061_dryad.hhmgqnkgr__v7"
library(dplyr)
summary_table <- read.delim(
glue::glue('{data_dir}/SummaryTable_allsites_12Nov20.txt')
)
sites_df <- data.frame(stringr::str_split_fixed(summary_table$site, ":", 2))
colnames(sites_df) <- c("chromosome", "site_id")
sites_df <- sites_df %>%
dplyr::mutate(site_id = as.numeric(site_id))
# split into blocks of a certain length
split_into_LD_blocks <- function(df, block_length) {
block_range <- seq(from = min(df$site_id), to = max(df$site_id), by = block_length)
df %>%
dplyr::mutate(block_id = plyr::laply(site_id, function(x) sum(x > block_range)))
}
# group by chromosome and then split into blocks
sites_df <- sites_df %>%
dplyr::group_by(chromosome) %>%
dplyr::group_modify(~ split_into_LD_blocks(.x, 1e4))
# Now, want to sample one SNP from each group
sites_sample_df <- sites_df %>%
dplyr::ungroup() %>%
dplyr::sample_frac() %>% #randomly shuffle df
dplyr::distinct(chromosome, block_id, .keep_all = TRUE) %>%
dplyr::select(chromosome, site_id)
# Reconstruct site names
selected_sites <- purrr::pmap_chr(
list(sites_sample_df$chromosome, sites_sample_df$site_id),
function(x, y) glue::glue("{x}:{y}")
)
summary_table_samp <- summary_table %>%
dplyr::filter(site %in% selected_sites) %>%
dplyr::select(c(site, pval_CTRL, pval_HS, coef_CTRL, coef_HS, sig_cat))
# replace 0 p-values with small numbers
summary_table_samp <- summary_table_samp %>%
dplyr::mutate(
pval_CTRL = pmax(1e-8, pval_CTRL),
pval_HS = pmax(1e-8, pval_HS)
)
# construct std error estimates from coefficients and p-values
summary_table_samp <- summary_table_samp %>%
dplyr::mutate(
std_error_ctrl = abs(coef_CTRL) / qnorm((2 - pval_CTRL) / 2),
std_error_hs = abs(coef_HS) / qnorm((2 - pval_HS) / 2)
)
reg_fx_mat <- t(matrix(
data = c(summary_table_samp$coef_CTRL, summary_table_samp$coef_HS),
nrow = 2,
byrow = TRUE
))
colnames(reg_fx_mat) <- c("ctrl", "hs")
reg_se_mat <- t(matrix(
data = c(summary_table_samp$std_error_ctrl, summary_table_samp$std_error_hs),
nrow = 2,
byrow = TRUE
))
colnames(reg_se_mat) <- c("ctrl", "hs")
mash_data <- mashr::mash_set_data(reg_fx_mat, reg_se_mat)
# Now, want to construct covariance matrices to feed into mash
cov_mat_list <- list()
cov_mat_list[['hs_spec']] <- matrix(
data = c(0, 0, 0, 1), nrow = 2, byrow = TRUE, dimnames = list(
rows = c("ctrl", "hs"), cols = c("ctrl", "hs")
)
)
cov_mat_list[['ctrl_spec']] <- matrix(
data = c(1, 0, 0, 0), nrow = 2, byrow = TRUE, dimnames = list(
rows = c("ctrl", "hs"), cols = c("ctrl", "hs")
)
)
desired_corrs <- seq(from = -1, to = 1, by = (1/3))
desired_amp <- c(2, 1.5, 1.25)
for(corr in desired_corrs) {
cov_mat_list[[glue::glue('equal_corr_{corr}')]] <- gamp:::make_amp_cov_mat(
desired_corr = corr, amp = FALSE
)
for(cond in c("hs", "ctrl")) {
for(amp in desired_amp) {
cov_mat_list[[glue::glue('{cond}_amp_{amp}_corr_{corr}')]] <- gamp:::make_amp_cov_mat(
desired_corr = corr, amp_e0 = (cond == "ctrl"), amp_coef = amp
)
}
}
}
mash_out <- mashr::mash(
data = mash_data,
Ulist = cov_mat_list,
algorithm.version = "Rcpp"
)
library(mashr)
help(mash)
mash_out_all <- mashr::mash(
data = mash_data,
Ulist = cov_mat_list,
fixg = TRUE,
g = ashr::get_fitted_g(mash_out),
algorithm.version = "Rcpp",
outputlevel = 3
)
mash_out_all <- mashr::mash(
data = mash_data,
fixg = TRUE,
g = ashr::get_fitted_g(mash_out),
algorithm.version = "Rcpp",
outputlevel = 3
)
mashr::get_estimated_pi(mash_out)
cov_mat_ests <- mashr::get_estimated_pi(mash_out)
cov_mat_ests[cov_mat_ests > 0]
mash_out_all$result$PosteriorCov
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorSD
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorSD[1]
mash_out_all$result$PosteriorSD[1,]
mash_out_all$result$PosteriorCov
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorSD[1,] ^ 2
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorMean
mash_out_all$result$PosteriorMean[1,]
mash_out_all$result$PosteriorCov[,,1]
library(MASS)
help(mvrnorm)
samps <- mvrnorm(n = 1000, mu = mash_out_all$result$PosteriorMean[1,], Sigma = mash_out_all$result$PosteriorCov[,,1])
samps
mash_out_all$result$PosteriorMean[1,]
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorCov[,,]
mash_out_all$result$PosteriorCov[1,,]
mash_out_all$result$PosteriorCov[,,]
mash_out_all$result$PosteriorCov[1,1,]
mash_out_all$result$PosteriorCov[,,1]
mash_out_all$result$PosteriorCov[,1,1]
mash_out_all$result$PosteriorCov[1,,]
mash_out_all$result$PosteriorCov[1,1,]
