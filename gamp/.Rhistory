theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
ggplot(data = sim_beta_diff_list$ash_diff_df, aes(x = mean_ash_diff, y = mean_ash_sd_diff, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
ylab("Environment Specific Standard Error") +
xlab("Ash Posterior Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 50),
sd_range = seq(from = .2, to = 1, length.out = 50),
pts_per_sim = 1000
)
ashr::get_fitted_g(ash_model)
g_fit <- ashr::get_fitted_g(ash_model)
g_fit$pi
g_fit$pi[1] <- .5
g_fit
g_fit$pi[8] <- .25
g_fit$pi[10] <- .25
g_fit
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 50),
sd_range = seq(from = .2, to = 1, length.out = 50),
pts_per_sim = 1000
)
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 50),
sd_range = seq(from = .2, to = 1, length.out = 50),
pts_per_sim = 1000
)
ggplot(data = sim_beta_diff_list$ash_diff_df, aes(x = mean_ash_diff, y = mean_ash_sd_diff, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
ylab("Environment Specific Standard Error") +
xlab("Ash Posterior Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
ggplot(data = sim_beta_diff_list$ash_diff_df, aes(x = mean_ash_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
ylab("Environment Specific Standard Error") +
xlab("Ash Posterior Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.5, to = .5, length.out = 45),
sd_range = seq(from = .2, to = .8, length.out = 45),
pts_per_sim = 2000
)
ggplot(data = sim_beta_diff_list$ash_diff_df, aes(x = mean_ash_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Ash Posterior Difference in Effect Size") +
ylab("Ash Posterior Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
View(sim_beta_diff_list$ash_diff_df)
View(sim_beta_diff_list$ash_diff_df)
library(gamp)
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.5, to = .5, length.out = 45),
sd_range = seq(from = .2, to = .8, length.out = 45),
pts_per_sim = 5000
)
tictoc::toc()
ggplot(data = sim_beta_diff_list$ash_diff_df, aes(x = mean_ash_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Ash Posterior Difference in Effect Size") +
ylab("Ash Posterior Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
sqrt(4/pi)
install.packages("mle.tools")
library(mle.tools)
help(coxsnell.bc)
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.5, to = .5, length.out = 45),
sd_range = seq(from = .2, to = .8, length.out = 45),
pts_per_sim = 1500
)
plot(density(sim_df$abs_beta_hat_diff_bc, from = 0))
quantile(sim_df$abs_beta_hat_diff_bc)
quantile(sim_df$abs_beta_hat_diff_bc, probs = c(.9))
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 45),
sd_range = seq(from = .01, to = .6, length.out = 45),
pts_per_sim = 1500
)
tictoc::toc()
plot(density(sim_df$abs_beta_hat_diff_bc, from = 0))
quantile(sim_df$abs_beta_hat_diff_bc, probs = c(.9))
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 45),
sd_range = seq(from = .01, to = .6, length.out = 45),
pts_per_sim = 2000
)
tictoc::toc()
View(sim_beta_diff_list$beta_hat_bc_sum_sim_df)
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 45),
sd_range = seq(from = .01, to = .6, length.out = 45),
pts_per_sim = 5000
)
tictoc::toc()
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
View(sim_beta_diff_list$beta_hat_bc_sum_sim_df)
library(gamp)
library(gamp)
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.1, to = .1, length.out = 50),
sd_range = seq(from = .01, to = 1, length.out = 50),
pts_per_sim = 6000
)
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.1, to = .1, length.out = 50),
sd_range = seq(from = .01, to = 1, length.out = 50),
pts_per_sim = 6000
)
tictoc::toc()
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -.75, to = .75, length.out = 45),
sd_range = seq(from = .01, to = .6, length.out = 45),
pts_per_sim = 5000
)
tictoc::toc()
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 60),
sd_range = seq(from = .01, to = 1, length.out = 60),
pts_per_sim = 7500
)
tictoc::toc()
library(gamp)
ggplot(data = sim_beta_diff_list$beta_hat_bc_sum_sim_df, aes(x = mean_abs_bc_diff, y = sd, fill = e1_add_mse - e1_GxE_mse)) +
geom_tile() +
scale_fill_gradient2() +
coord_fixed() +
xlab("Bias Corrected Difference in Effect Size") +
ylab("Environment Specific Standard Error") +
ggtitle("MSE") +
theme(plot.title = element_text(hjust = 0.5), legend.title=element_text(size=7))
pi
'%>%' <- magrittr::'%>%'
# First, load in the data
data_dir <- "/Users/ericweine/Documents/gwas_amplification/paper_figures/gxsex_cv_results"
create_cv_df <- function(data_folder, trait, n_folds = 5) {
cv_df <- data.frame()
for (fold in 1:n_folds) {
# Training Data
for (sex in c("male", "female", "all")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_train.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_train_{sex}_{fold}"), glue::glue("se_train_{sex}_{fold}")))
if (nrow(cv_df) == 0) {
cv_df <- fold_df
} else {
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
# Test Data
for (sex in c("male", "female")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_test.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_test_{sex}_{fold}"), glue::glue("se_test_{sex}_{fold}")))
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
return(cv_df)
}
cv_df <- create_cv_df(
data_dir, "albumin", 1
)
cv_df <- cv_df %>% dplyr::distinct(id, .keep_all = TRUE)
# I think here I should perhaps threshold for true difference in sex effects
cv_df <- cv_df %>%
dplyr::mutate(
beta_diff = b_train_male_1 - b_train_female_1,
se_beta_diff = sqrt(se_train_male_1 ^ 2 + se_train_female_1 ^ 2)
)
cv_df <- cv_df %>%
dplyr::mutate(
bias_corrected_beta_diff = max(0, abs(beta_diff) - sqrt(2 / pi) * se_beta_diff)
)
# ash_train_df <- cv_df %>% dplyr::sample_n(250000)
#
# ash_model <- ashr::ash(
#   betahat = ash_train_df$beta_diff,
#   sebetahat = ash_train_df$se_beta_diff
# )
#
# cv_df <- cv_df %>% sample_n(100000)
#
# ash_regressed_model_all_snps <- ashr::ash(
#   betahat = cv_df$beta_diff,
#   sebetahat = cv_df$se_beta_diff,
#   fixg = TRUE,
#   g = ashr::get_fitted_g(ash_model)
# )
cv_df <- cv_df %>%
dplyr::mutate(
expected_add_male_bias = -.5 * bias_corrected_beta_diff,
expected_add_female_bias = .5 * bias_corrected_beta_diff,
expected_add_var = se_train_all_1 ^ 2,
expected_GxE_male_mse = se_train_male_1 ^ 2,
expected_GxE_female_mse = se_train_female_1 ^ 2
)
cv_df <- cv_df %>%
dplyr::mutate(
expected_add_male_mse = expected_add_male_bias ^ 2 + expected_add_var,
expected_add_female_mse = expected_add_female_bias ^ 2 + expected_add_var
)
cv_df <- cv_df %>%
dplyr::mutate(
expected_male_add_mse_advantage = - (expected_add_male_mse - expected_GxE_male_mse),
expected_female_add_mse_advantage = - (expected_add_female_mse - expected_GxE_female_mse)
)
cv_df <- cv_df %>%
dplyr::mutate(
actual_add_male_mse = (b_train_all_1 - b_test_male_1) ^ 2,
actual_add_female_mse = (b_train_all_1 - b_test_female_1) ^ 2,
actual_GxE_male_mse = (b_train_male_1 - b_test_male_1) ^ 2,
actual_GxE_female_mse = (b_train_female_1 - b_test_female_1) ^ 2
)
cv_df <- cv_df %>%
dplyr::mutate(
actual_male_add_mse_advantage = - (actual_add_male_mse - actual_GxE_male_mse),
actual_female_add_mse_advantage = - (actual_add_female_mse - actual_GxE_female_mse)
)
cv_df <- cv_df %>%
tidyr::drop_na()
'%>%' <- magrittr::'%>%'
# First, load in the data
data_dir <- "/Users/ericweine/Documents/gwas_amplification/paper_figures/gxsex_cv_results"
create_cv_df <- function(data_folder, trait, n_folds = 5) {
cv_df <- data.frame()
for (fold in 1:n_folds) {
# Training Data
for (sex in c("male", "female", "all")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_train.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_train_{sex}_{fold}"), glue::glue("se_train_{sex}_{fold}")))
if (nrow(cv_df) == 0) {
cv_df <- fold_df
} else {
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
# Test Data
for (sex in c("male", "female")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_test.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_test_{sex}_{fold}"), glue::glue("se_test_{sex}_{fold}")))
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
return(cv_df)
}
cv_df <- create_cv_df(
data_dir, "albumin", 1
)
cv_df <- cv_df %>% dplyr::distinct(id, .keep_all = TRUE)
cv_df <- cv_df %>%
dplyr::mutate(
beta_diff = b_train_male_1 - b_train_female_1,
se_beta_diff = sqrt(se_train_male_1 ^ 2 + se_train_female_1 ^ 2)
)
cv_df <- cv_df %>%
dplyr::mutate(
bias_corrected_beta_diff = max(0, abs(beta_diff) - sqrt(2 / pi) * se_beta_diff)
)
cv_df$bias_corrected_beta_diff
cv_df <- cv_df %>%
dplyr::mutate(
bias_corrected_beta_diff = max(0, abs(beta_diff)) - sqrt(2 / pi) * se_beta_diff
)
cv_df$bias_corrected_beta_diff
max(0, abs(cv_df$beta_diff)) - sqrt(2 / pi) * cv_df$se_beta_diff
pmax(0, abs(cv_df$beta_diff)) - sqrt(2 / pi) * cv_df$se_beta_diff
'%>%' <- magrittr::'%>%'
# First, load in the data
data_dir <- "/Users/ericweine/Documents/gwas_amplification/paper_figures/gxsex_cv_results"
create_cv_df <- function(data_folder, trait, n_folds = 5) {
cv_df <- data.frame()
for (fold in 1:n_folds) {
# Training Data
for (sex in c("male", "female", "all")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_train.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_train_{sex}_{fold}"), glue::glue("se_train_{sex}_{fold}")))
if (nrow(cv_df) == 0) {
cv_df <- fold_df
} else {
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
# Test Data
for (sex in c("male", "female")) {
fold_df <- readr::read_tsv(
file = glue::glue("{data_folder}/{trait}/{trait}.{sex}_test.1.merged.txt"),
col_select = c("ID", "BETA", "SE")
) %>%
setNames(c("id", glue::glue("b_test_{sex}_{fold}"), glue::glue("se_test_{sex}_{fold}")))
cv_df <- cv_df %>% dplyr::inner_join(fold_df, by = "id")
}
}
return(cv_df)
}
cv_df <- create_cv_df(
data_dir, "albumin", 1
)
cv_df <- cv_df %>% dplyr::distinct(id, .keep_all = TRUE)
# I think here I should perhaps threshold for true difference in sex effects
cv_df <- cv_df %>%
dplyr::mutate(
beta_diff = b_train_male_1 - b_train_female_1,
se_beta_diff = sqrt(se_train_male_1 ^ 2 + se_train_female_1 ^ 2)
)
cv_df <- cv_df %>%
dplyr::mutate(
bias_corrected_beta_diff = pmax(0, abs(beta_diff) - sqrt(2 / pi) * se_beta_diff)
)
cv_df$bias_corrected_beta_diff
max(cv_df$bias_corrected_beta_diff)
max(cv_df$bias_corrected_beta_diff, na.rm = TRUE)
plot(density(cv_df$bias_corrected_beta_diff))
cv_df <- cv_df %>%
tidyr::drop_na()
plot(density(cv_df$bias_corrected_beta_diff))
plot(density(cv_df$bias_corrected_beta_diff, from = 0, to = 1))
mean(cv_df$bias_corrected_beta_diff > .5)
mean(cv_df$bias_corrected_beta_diff > .05)
cv_df <- cv_df %>%
dplyr::mutate(
expected_add_male_bias = -.5 * bias_corrected_beta_diff,
expected_add_female_bias = .5 * bias_corrected_beta_diff,
expected_add_var = se_train_all_1 ^ 2,
expected_GxE_male_mse = se_train_male_1 ^ 2,
expected_GxE_female_mse = se_train_female_1 ^ 2
)
cv_df <- cv_df %>%
dplyr::mutate(
expected_add_male_mse = expected_add_male_bias ^ 2 + expected_add_var,
expected_add_female_mse = expected_add_female_bias ^ 2 + expected_add_var
)
cv_df <- cv_df %>%
dplyr::mutate(
expected_male_add_mse_advantage = - (expected_add_male_mse - expected_GxE_male_mse),
expected_female_add_mse_advantage = - (expected_add_female_mse - expected_GxE_female_mse)
)
cv_df <- cv_df %>%
dplyr::mutate(
actual_add_male_mse = (b_train_all_1 - b_test_male_1) ^ 2,
actual_add_female_mse = (b_train_all_1 - b_test_female_1) ^ 2,
actual_GxE_male_mse = (b_train_male_1 - b_test_male_1) ^ 2,
actual_GxE_female_mse = (b_train_female_1 - b_test_female_1) ^ 2
)
cv_df <- cv_df %>%
dplyr::mutate(
actual_male_add_mse_advantage = - (actual_add_male_mse - actual_GxE_male_mse),
actual_female_add_mse_advantage = - (actual_add_female_mse - actual_GxE_female_mse)
)
cv_df <- cv_df %>%
dplyr::filter(
se_train_male_1 <= sqrt(12) & se_train_female_1 <= sqrt(12) &
se_train_all_1 <= sqrt(12) &
se_test_male_1 <= sqrt(12) & se_test_female_1 <= sqrt(12)
)
max(cv_df$bias_corrected_beta_diff)
male_cv_df <- cv_df %>%
dplyr::filter(
expected_male_add_mse_advantage > quantile(expected_male_add_mse_advantage, probs = .025) &
expected_male_add_mse_advantage < quantile(expected_male_add_mse_advantage, probs = .975)
)
male_cv_df <- male_cv_df %>%
dplyr::mutate(
percentile = cut(
expected_male_add_mse_advantage,
seq(min(expected_male_add_mse_advantage), max(expected_male_add_mse_advantage), length.out = 10),
include.lowest = TRUE,
labels = FALSE
)
)
male_summ_df <- male_cv_df %>%
dplyr::group_by(percentile) %>%
dplyr::summarize(
weighted_dec_advantage_add_male = weighted.mean(actual_male_add_mse_advantage, 1 / (se_test_male_1 ^ 2)),
unweighted_dec_advantage_add_male = mean(actual_male_add_mse_advantage),
weighted_sd_advantage_add_male = sqrt(Hmisc::wtd.var(actual_male_add_mse_advantage, 1 / (se_test_male_1 ^ 2))),
expected_advantage = mean(expected_male_add_mse_advantage)
)
View(male_summ_df)
plot(
male_summ_df$expected_advantage,
male_summ_df$weighted_dec_advantage_add_male,
xlab = "Expected Male MSE Advantage",
ylab = "Actuale Male MSE Advantage"
)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 60),
sd_range = seq(from = .01, to = 1, length.out = 60),
pts_per_sim = 2500
)
tictoc::toc()
g_fit
g_fit
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 60),
sd_range = seq(from = .01, to = 1, length.out = 60),
pts_per_sim = 2500
)
tictoc::toc()
g_fit$pi
g_fit
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 60),
sd_range = seq(from = .01, to = 1, length.out = 60),
pts_per_sim = 2500
)
tictoc::toc()
g_fit
library(gamp)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 60),
sd_range = seq(from = .01, to = 1, length.out = 60),
pts_per_sim = 2500
)
tictoc::tic()
sim_beta_diff_list <- gamp:::sim_beta_hat_diff(
diff_range = seq(from = -1, to = 1, length.out = 40),
sd_range = seq(from = .01, to = 1, length.out = 40),
pts_per_sim = 1250
)
tictoc::toc()
g_fit
plot(density(sim_df$ash_beta_diff))
